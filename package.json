{
  "name": "blrplt",
  "version": "1.0.0",
  "main": "index.js",
  "license": "MIT",
  "devDependencies": {
    "babel-core": "^6.18.2",
    "babel-eslint": "^7.1.1",
    "babel-loader": "^6.2.8",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-plugin-transform-function-bind": "^6.8.0",
    "babel-polyfill": "^6.16.0",
    "babel-preset-es2015": "^6.18.0",
    "babel-preset-es2016": "^6.16.0",
    "babel-preset-react": "^6.16.0",
    "babel-preset-stage-0": "^6.16.0",
    "clean-webpack-plugin": "^0.1.14",
    "copy-webpack-plugin": "^4.0.1",
    "css-loader": "^0.26.0",
    "eslint": "^3.11.0",
    "eslint-config-airbnb": "^13.0.0",
    "eslint-config-airbnb-flow": "^1.0.2",
    "eslint-import-resolver-webpack": "^0.7.0",
    "eslint-loader": "^1.6.1",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-jsx-a11y": "^2.2.3",
    "eslint-plugin-react": "^6.7.1",
    "express": "^4.14.0",
    "extract-text-webpack-plugin": "^2.0.0-beta",
    "file-loader": "^0.9.0",
    "html-webpack-plugin": "^2.24.1",
    "json-loader": "^0.5.4",
    "raw-loader": "^0.5.1",
    "style-loader": "^0.13.1",
    "webpack": "^2.1.0-beta.25",
    "webpack-dev-middleware": "^1.8.4",
    "webpack-hot-middleware": "^2.13.2",
    "webpack-manifest-plugin": "^1.1.0",
    "webpack-node-externals": "^1.5.4",
    "webpack-s3-plugin": "^0.9.2"
  },
  "dependencies": {
    "history": "^4.4.1",
    "react": "^15.4.1",
    "react-dom": "^15.4.1",
    "react-helmet": "^3.2.2",
    "react-hot-loader": "^3.0.0-beta.6",
    "react-redux": "^4.4.6",
    "react-router": "v4.0.0-alpha.6",
    "redux": "^3.6.0",
    "redux-logger": "^2.7.4",
    "redux-saga": "^0.13.0"
  },
  "config": {
    "s3BucketName": "blrplt",
    "cloudFormationStackName": "blrplt",
    "region": "eu-west-1",
    "functionName": "blrplt",
    "accountId": "674643927295"
  },
  "scripts": {
    "start": "node ./scripts/devServer.js",
    "deploy": "npm run deploy:client && npm run build:server && npm run aws:package-upload-update-function",
    "deploy:client": "webpack --config webpack.config.prod.js",
    "build:server": "webpack --config webpack.config.server.js",
    "test:local:server": "node -e \"require('./build/lambda.js').handler(require('./server/api-gateway-event.json'), {succeed: v => console.log(v)}, (e, v) => console.log(v))\"",
    "flow": "flow; test $? -eq 0 -o $? -eq 2",
    "aws:config": "node server/configure.js $npm_package_config_accountId $npm_package_config_s3BucketName $npm_package_config_region $npm_package_config_functionName",
    "aws:setup": "aws s3api get-bucket-location --bucket $npm_package_config_s3BucketName --region $npm_package_config_region || npm run aws:create-bucket && npm run aws:package-upload-function && npm run aws:upload-api-gateway-swagger && npm run aws:stack:create",
    "aws:bucket:create": "aws s3 mb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "aws:bucket:delete": "aws s3 rm s3://$npm_package_config_s3BucketName/lambda-function.zip --region $npm_package_config_region; aws s3 rm s3://$npm_package_config_s3BucketName/simple-proxy-api.yaml --region $npm_package_config_region; aws s3 rb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "aws:upload-lambda-function-package": "aws s3 cp ./lambda-function.zip s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "aws:upload-api-gateway-swagger": "aws s3 cp ./server/simple-proxy-api.yaml s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "aws:stack:create": "aws cloudformation create-stack --stack-name $npm_package_config_cloudFormationStackName --template-body file://./server/cloudformation.json --capabilities CAPABILITY_IAM --parameters ParameterKey=AwsServerlessExpressS3Bucket,ParameterValue=$npm_package_config_s3BucketName --region $npm_package_config_region",
    "aws:stack:update": "aws cloudformation update-stack --stack-name $npm_package_config_cloudFormationStackName --template-body file://./server/cloudformation.json --capabilities CAPABILITY_IAM --parameters ParameterKey=AwsServerlessExpressS3Bucket,ParameterValue=$npm_package_config_s3BucketName --region $npm_package_config_region",
    "aws:stack:delete": "aws cloudformation delete-stack --stack-name $npm_package_config_cloudFormationStackName --region $npm_package_config_region",
    "aws:update-function": "aws lambda update-function-code --function-name $npm_package_config_functionName --region $npm_package_config_region --s3-bucket $npm_package_config_s3BucketName --s3-key lambda-function.zip",
    "aws:package-function": "rm -f lambda-function.zip; cd build; zip -q -r ../lambda-function.zip server.js lambda.js node_modules; cd ..",
    "aws:package-upload-function": "npm run aws:package-function && npm run aws:upload-lambda-function-package",
    "aws:package-upload-update-function": "npm run aws:package-upload-function && npm run aws:update-function"
  }
}
